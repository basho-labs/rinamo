%% @doc To enable Rinamo http interface set this 'on'.
%% @datatype enum on, off
{mapping, "rinamo", "rinamo.enabled", [
  {default, on},
  {datatype, {enum, [on, off]}}
]}.

{ translation,
  "rinamo.enabled",
  fun(Conf) ->
          Setting = cuttlefish:conf_get("rinamo", Conf),
          case Setting of
              on -> true;
              off -> false;
              _Default -> false
          end
  end}.

%% Rinamo listener protocol
%% @doc Tells Rinamo to use HTTP, HTTPS or SPDY when listening for connections.
%% @datatype enum http, https, spdy
{mapping, "rinamo.network.protocol", "rinamo.network.protocol", [
  {default, http},
  {datatype, {enum, [http, https, spdy]}}
]}.

%% Rinamo listener bind IP and Port
%% @doc Tells Rinamo which IP and port to bind to.
%% @datatype ip
{mapping, "rinamo.network.bind", "rinamo.network.bind", [
  {default, {"127.0.0.1",8000}},
  {datatype, ip}
]}.

%% Rinamo number of listener acceptors
%% @doc Tells Rinamo how many Cowboy acceptors to use.
%% @datatype integer
{mapping, "rinamo.network.acceptors", "rinamo.network.acceptors", [
  {default, 100},
  {datatype, integer},
  {validators, ["greater_than_zero"]}
]}.

%% Rinamo URL Root Path
%% @doc The url prefix path applied to Rinamo endpoints.
{mapping, "rinamo.url.rootpath", "rinamo.url.rootpath", [
  {default, none},
  {datatype, [{atom, none}, string]}
]}.
{ translation,
  "rinamo.url.rootpath",
  fun(Conf) ->
          Setting = cuttlefish:conf_get("rinamo.url.rootpath", Conf),
          case Setting of
            none -> <<"">>;
            _ -> list_to_binary(Setting)
          end
  end}.

%% Rinamo SSL CA Cert File
%% @doc The path to the CA cert file that contains the back chain.
%% @datatype file
{mapping, "rinamo.ssl.cacertfile", "rinamo.ssl.cacertfile", [
  {datatype, file},
  {commented, "$(platform_etc_dir)/rinamo_cacert.pem"}
]}.

%% Rinamo SSL Cert File
%% @doc The path to the cert file for this server.
%% @datatype file
{mapping, "rinamo.ssl.certfile", "rinamo.ssl.certfile", [
  {datatype, file},
  {commented, "$(platform_etc_dir)/rinamo_cert.pem"}
]}.

%% Rinamo SSL Key File
%% @doc The path to the server private key file.
%% @datatype file
{mapping, "rinamo.ssl.keyfile", "rinamo.ssl.keyfile", [
  {datatype, file},
  {commented, "$(platform_etc_dir)/rinamo_key.pem"}
]}.

%% Rinamo Indexing Strategy
%% @doc Tells Rinamo which indexing stragegy to use for Range, LSI, and GSI.
%% @datatype enum rinamo_idx_one_for_one, rinamo_idx_item_proxies
{mapping, "rinamo.index.strategy", "rinamo.index.strategy", [
  {default, rinamo_idx_one_for_one},
  {datatype, {enum, [
    rinamo_idx_one_for_one,
    rinamo_idx_item_proxies]}}
]}.

%% Rinamo Authorization Strategy
%% @doc Tells Rinamo how to authorize requests and assign data owners.
%% @datatype enum rinamo_auth_basic, rinamo_auth_keystone_v2, rinamo_auth_keystone_v3
{mapping, "rinamo.auth.strategy", "rinamo.auth.strategy", [
  {default, rinamo_auth_basic},
  {datatype, {enum, [
    rinamo_auth_basic,
    rinamo_auth_keystone_v2,
    rinamo_auth_keystone_v3]}}
]}.

%% Keystone Access Token (rinamo_admin_token)
%% @doc Keystone service token used by Rinamo to authorize requests.
%% @datatype string
{mapping, "rinamo.keystone.token", "rinamo.keystone.token", [
  {commented, "rinamo_admin_token"}
]}.
{ translation,
  "rinamo.keystone.token",
  fun(Conf) ->
          Setting = cuttlefish:conf_get("rinamo.keystone.token", Conf),
          list_to_binary(Setting)
  end}.

%% Keystone Base URL (http://10.0.0.3:35357)
%% @doc The host and tcp port where the keystone api can be reached.
%% @datatype string
{mapping, "rinamo.keystone.baseurl", "rinamo.keystone.baseurl", [
  {commented, "http://10.0.0.3:35357"}
]}.
{ translation,
  "rinamo.keystone.baseurl",
  fun(Conf) ->
          Setting = cuttlefish:conf_get("rinamo.keystone.baseurl", Conf),
          list_to_binary(Setting)
  end}.
